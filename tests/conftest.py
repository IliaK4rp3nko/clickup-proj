import allure
import pytest
import requests
from utils.helpers import CLICKUP_API_KEY
from config import BASE_URL, CREATE_TASK_URL

import pytest
from playwright.sync_api import sync_playwright


@allure.title("–§–∏–∫—Å—Ç—É—Ä–∞ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏")
@pytest.fixture(scope="session")
def auth_session():
    with allure.step("–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"):
        session = requests.session()
        session.headers.update({
            'Authorization': f'{CLICKUP_API_KEY}',
            'Content-Type': 'application/json'
        })
    return session

@allure.title("–§–∏–∫—Å—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏")
@pytest.fixture()
def post_data():
    with allure.step("–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á–∏"):
        data = {
            "name": "My First Task from API",
            "description": "Created via ClickUp API üéØ",
            "status": "to do"
        }
    return data

@allure.title("–§–∏–∫—Å—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏")
@pytest.fixture()
def updated_data():
    with allure.step("–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è PUT-–∑–∞–ø—Ä–æ—Å–∞"):
        data = {
            "name": "Updated data",
            "description": "Updated description",
            "status": "in progress"
        }
    return data

@allure.title("–§–∏–∫—Å—Ç—É—Ä–∞ —Å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
@pytest.fixture()
def invalid_data():
    with allure.step("–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á–∏"):
        data = {
            "name": "",
            "description": "12345",
            "status": "not_a_status"
        }
    return data

@allure.title("–§–∏–∫—Å—Ç—É—Ä–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏")
@pytest.fixture
def task_fixture(auth_session, post_data):
    with allure.step("–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ —á–µ—Ä–µ–∑ API"):
        create_response = auth_session.post(
            f"{BASE_URL}{CREATE_TASK_URL}",
            json=post_data
        )
        assert create_response.status_code == 200,(
            "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–¥–∞—á–∏")
        task = create_response.json()
        task_id = task["id"]

        yield task

    with allure.step("–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏"):
        delete_response = auth_session.delete(
            f"{BASE_URL}/v2/task/{task_id}"
        )
        assert delete_response.status_code == 204,(
            "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏"
        )

    with allure.step("–ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∑–∞–¥–∞—á–∞ —É–¥–∞–ª–µ–Ω–∞"):
        check_response = auth_session.get(f"{BASE_URL}/v2/task/{task_id}")
        assert check_response.status_code == 404, "–ó–∞–¥–∞—á–∞ –Ω–µ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞"
    
    
@allure.title("–§–∏–∫—Å—Ç—É—Ä–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏")
@pytest.fixture
def task_fixture_only_create(auth_session, post_data):
    with allure.step("–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ —á–µ—Ä–µ–∑ API"):
        create_response = auth_session.post(
            f"{BASE_URL}{CREATE_TASK_URL}",
            json=post_data
            )
        assert create_response.status_code == 200,(
            "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–¥–∞—á–∏")
        task = create_response.json()
        task_id = task["id"]

        yield task

@pytest.fixture(scope='session')
def browser():
    playwright = sync_playwright().start()
    browser = playwright.chromium.launch(headless=False, slow_mo=1000)
    yield browser
    browser.close()
    playwright.stop()
